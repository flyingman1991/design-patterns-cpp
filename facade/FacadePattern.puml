@startuml FacadePattern

package ComplexSubsystem #DDDDDD {
    class SubsystemA {
        + void subOperation()
    }

    class SubsystemB {
        + void subOperation()
    }

    class SubsystemC {
        + void subOperation()
    }
}

class Facade {
    __private member__
    - SubsystemA *ptr_a
    - SubsystemB *ptr_b
    - SubsystemC *ptr_c
    __public methods__
    + void operation_1()
    + void operation_2()
}

client ..> Facade : dependency
Facade --> SubsystemA : association
Facade --> SubsystemB : association
Facade --> SubsystemC : association

@enduml